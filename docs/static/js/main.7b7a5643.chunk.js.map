{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","propSetCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","categ","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","tile","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMA4CeA,EAzCK,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBAAuB,EAEhBC,mBAAS,OAFO,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAmB1C,OACG,8BAEG,sBAAMC,SAdS,SAACC,GAEnBA,EAAEC,iBAECJ,EAAMK,OAAOC,OAAS,IACtBR,GAAkB,SAAAS,GAAK,OAAKP,GAAL,mBAAeO,OACtCN,EAAS,MAQT,SAEG,uBACGO,KAAK,OACLC,YAAY,SACZC,MAAOV,EACPW,SAxBc,SAACR,GACxBF,EAAUE,EAAES,OAAOF,e,uBCPZG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAOdC,EAPc,0FAO2EC,UAAUH,GAPrF,sBASII,MAAMF,GATV,cASdG,EATc,gBAWCA,EAAUC,OAXX,uBAWbC,EAXa,EAWbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAQH,EAAIG,OAAOC,iBAAiBZ,QAjBtB,kBAqBbM,GArBa,4CAAH,sDCkBLO,EAhBK,SAACL,GAIlB,OAFAM,QAAQC,IAAIP,EAAIA,KAGb,sBAAKQ,UAAU,qBAAf,UACG,qBAAKC,IAAKT,EAAIA,IAAIG,OAAQO,IAAKV,EAAIA,IAAIW,OACvC,4BAAIX,EAAIA,IAAIE,YCsBNU,EAzBC,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECJJ,SAACA,GAAc,IAAD,EAEbf,mBAAS,CAChCsB,KAAM,GACNgB,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA0BvC,OAlBAC,qBAAW,WACR3B,EAAQC,GACJ2B,MAAM,SAAAC,GAIDH,EAAS,CACNlB,KAAKqB,EACLL,SAAQ,SAQpB,CAACvB,IAEGwB,EDpBiBK,CAAa7B,GAA9BO,EAFsB,EAEtBA,KAAMgB,EAFgB,EAEhBA,QAGb,OACG,qCACG,6BAAKvB,IAEJuB,EAAU,4CAAoB,KAC/B,qBAAKL,UAAU,YAAf,SAESX,EAAKE,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,aEe5BmB,EA7BM,SAAAC,GAAU,IAAD,EAES9C,mBAAS,CAAC,UAFnB,mBAEpB+C,EAFoB,KAERC,EAFQ,KAI3B,OACG,gCACG,oBAAIf,UAAU,wCAAd,8BAEA,cAAC,EAAD,CAAalC,kBAAmBiD,IAEhC,uBAEA,uBAEA,6BAEMD,EAAWvB,KAAI,SAAAT,GACZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MChBvCkC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7b7a5643.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({propSetCategories}) => {\r\n\r\n   const [input, setInput] = useState('   ');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInput (e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) =>{\r\n\r\n      e.preventDefault();\r\n\r\n      if(input.trim().length > 2){\r\n         propSetCategories(categ => [input, ...categ]);\r\n         setInput('');\r\n      }\r\n\r\n   }\r\n\r\n   return (\r\n      <div >\r\n      \r\n         <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n               type=\"text\"\r\n               placeholder=\"Buscar\"\r\n               value={input}\r\n               onChange={ handleInputChange } \r\n            />\r\n\r\n         </form>\r\n         \r\n      </div>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   propSetCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n\r\n\r\n","\r\nexport const getGifs = async(category) =>{\r\n   //api.giphy.com/v1/gifs/search\r\n\r\n   //uL39WtcMhQGJMwyk4mKRpIXNwZqHERLi\r\n\r\n   //api.giphy.com/v1/gifs/search?api_key=uL39WtcMhQGJMwyk4mKRpIXNwZqHERLi&q=Rick&limit=10\r\n\r\n   const url = `https://api.giphy.com/v1/gifs/search?api_key=uL39WtcMhQGJMwyk4mKRpIXNwZqHERLi&q=${encodeURI(category)}&limit=10`;\r\n\r\n   const respuesta = await fetch(url);\r\n\r\n   const {data} = await respuesta.json();\r\n\r\n   const gifs = data.map(img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         images: img.images.downsized_medium.url\r\n      }\r\n   })\r\n\r\n   return gifs;\r\n\r\n\r\n};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = (img) => {\r\n\r\n   console.log(img.img);\r\n\r\n   return (\r\n      <div className=\"card animate__tada\">\r\n         <img src={img.img.images} alt={img.img.tile} />\r\n         <p>{img.img.title}</p>\r\n      </div>\r\n   )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n   const {data, loading} = useFetchGifs(category);\r\n\r\n\r\n   return (\r\n      <>\r\n         <h3>{category}</h3>\r\n\r\n         {loading ? <p>Cargando...</p>: null}\r\n         <div className=\"card-grid\">\r\n            {\r\n                  data.map(img=>(\r\n                     <GifGridItem key={img.id} img={img} />\r\n                  ))\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n   const [state, setstate] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   \r\n   useEffect( () => {\r\n      getGifs(category)\r\n         .then( imgs =>{\r\n\r\n            \r\n      \r\n               setstate({\r\n                  data:imgs,\r\n                  loading:false\r\n               });\r\n\r\n         \r\n      \r\n         })\r\n            \r\n        \r\n   }, [category])\r\n\r\n   return state; //esto regresa {data:[], loading:true}\r\n   \r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = props => {\r\n\r\n   const [categories, setCategories] = useState(['Hello']);\r\n\r\n   return (\r\n      <div>\r\n         <h1 className=\"animate__animated animate__backInDown\">Buscador De Gifs</h1>\r\n\r\n         <AddCategory propSetCategories={setCategories} />\r\n\r\n         <hr/>\r\n\r\n         <br/>\r\n\r\n         <ol>\r\n            {\r\n               categories.map(category => {\r\n                  return <GifGrid key={category} category={category} />\r\n               })\r\n            }\r\n         </ol>\r\n      </div>\r\n   )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}